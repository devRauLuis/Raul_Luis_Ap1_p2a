@page "/consulta-detalles"


<div class="card shadow-lg">
    <div class="card-header">
        <h1 class="card-title">Consulta de detalles</h1>
    </div>
    <div class="card-body">

        <form @onsubmit='Filtrar' class="">
            <div class="d-flex align-items-end w-50 ">
                <div class="me-2">
                    <label for='filtro' class="form-label">Filtro</label>
                    <select id="filtro" class="form-select text-14" @bind='_filtro'>
                        <option value="presentacion">Presentacion</option>
                        <option value="desc">Descripcion</option>
                        <option value="producto-id">Producto ID</option>
                    </select>
                </div>
                <div class="d-flex w-50">
                    <input type='@(_filtro == "producto-id" ? "number" : "text")' @bind="_busqueda"
                        class="form-control text-14" />
                    <button type='submit' class="btn btn-primary ms-2">Buscar</button>
                </div>
            </div>
        </form>

        <table class="table table-light table-striped table-bordered table-hover mt-4">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Descripcion</th>
                    <th>Presentacion</th>
                    <th>Cantidad</th>
                    <th>Precio</th>
                    <th>Existencia Empacada</th>
                    <th>Producto ID</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (this._productoDetalles is not null)
                {
                    @foreach (var detalles in this._productoDetalles)
                    {
                        Console.WriteLine(detalles.Dump());
                        <tr>
                            <td>
                                @detalles.ProductoDetallesId
                            </td>
                            <td>
                                @detalles.Descripcion
                            </td>
                            <td>
                                @detalles.Presentacion
                            </td>
                            <td>
                                @detalles.Cantidad
                            </td>
                            <td>
                                @detalles.Precio
                            </td>
                            <td>
                                @(detalles.ExistenciaEmpacada > 0 ? detalles.ExistenciaEmpacada : 0)
                            </td>
                            <td>@detalles.ProductoId</td>
                            <td><span class="oi oi-eye text-primary me-2" aria-hidden='true' title='edit'
                            @onclick='args => navManager.NavigateTo("/registro-productos/" + detalles.ProductoId)' /></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {

    [Inject]
    public ProductosBLL? _productosBLL { get; set; }

    public List<ProductoDetallesPresentacion>? _productoDetalles { get; set; }

    public string? _busqueda { get; set; }
    public string? _filtro { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        this._productoDetalles = this._productosBLL?.GetListProductoDetallesPresentacion(p => true);
    }

    public void Filtrar()
    {
        List<ProductoDetallesPresentacion>? listaProductos = _productosBLL?.GetListProductoDetallesPresentacion(p => true);

        Console.WriteLine("Filtro: " + _filtro);

        if (_busqueda is not null && _busqueda.Length > 0)
        {

            if (_filtro == "producto-id")
            {
                int id = int.TryParse(_busqueda, out id) ? id : 0;
                if (id <= 0)
                {
                    toastService.ShowError("ID no valido");

                }
                else
                    listaProductos = _productosBLL?.GetListProductoDetallesPresentacion(pde => pde.ProductoId == id);
            }
            else if (_filtro == "desc")
            {
                Console.WriteLine("Filtrando por la descripcion: " + _busqueda);

                listaProductos = _productosBLL?.GetListProductoDetallesPresentacion(pde => pde.Descripcion.Contains(_busqueda));
            }
            else
            {
                Console.WriteLine("Filtrando por la presentacion: " + _busqueda);
                listaProductos = _productosBLL?.GetListProductoDetallesPresentacion(pde => pde.Presentacion.Contains(_busqueda));
            }
        }

        this._productoDetalles = listaProductos;

    }
}